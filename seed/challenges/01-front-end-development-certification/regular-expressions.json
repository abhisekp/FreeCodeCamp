{
  "name": "Regular Expressions",
  "time": "4h",
  "order": 6,
  "challenges": [
    {
      "id": "cf1111c1c12feddfaeb6bdef",
      "title": "Sift through Text with Regular Expressions",
      "description": [
        "<code>Regular expressions</code> are used to find certain words or patterns inside of <code>strings</code>.",
        "For example, if we wanted to find the word <code>the</code> in the string <code>The dog chased the cat</code>, we could use the following <code>regular expression</code>: <code>/the/gi</code>",
        "Let's break this down a bit:",
        "<code>/</code> is the start of the regular expression.",
        "<code>the</code> is the pattern we want to match.",
        "<code>/</code> is the end of the regular expression.",
        "<code>g</code> means <code>global</code>, which causes the pattern to return all matches in the string, not just the first one.",
        "<code>i</code> means that we want to ignore the case (uppercase or lowercase) when searching for the pattern.",
        "<h4>Instructions</h4>",
        "Select all the occurrences of the word <code>and</code> in <code>testString</code>.",
        "You can do this by replacing the <code>.</code> part of the regular expression with the word <code>and</code>."
      ],
      "head": [
        ""
      ],
      "challengeSeed": [
        "// Setup",
        "var testString = \"Ada Lovelace and Charles Babbage designed the first computer and the software that would have run on it.\";",
        "",
        "// Example",
        "var expressionToGetSoftware = /software/gi;",
        "var softwareCount = testString.match(expressionToGetSoftware).length;",
        "  ",
        "",
        "// Only change code below this line.",
        "",
        "var expression = /./gi;  // Change this Line",
        "",
        "// Only change code above this line",
        "",
        "// This code counts the matches of expression in testString",
        "var andCount = testString.match(expression).length;",
        ""
      ],
      "tail": [
        "(function(){return andCount;})();"
      ],
      "solutions": [
        "var testString = \"Ada Lovelace and Charles Babbage designed the first computer and the software that would have run on it.\";\nvar expression = /and/gi;  // Change this Line\nvar andCount = testString.match(expression).length;"
      ],
      "tests": [
        "assert(andCount==2, 'message: Your <code>regular expression</code> should find two occurrences of the word <code>and</code>.');",
        "assert(code.match(/\\/and\\/gi/), 'message: Use <code>regular expressions</code> to find the word <code>and</code> in <code>testString</code>.');"
      ],
      "type": "waypoint",
      "challengeType": 1
    },
    {
      "id": "cf1111c1c12feddfaeb7bdef",
      "title": "Find Numbers with Regular Expressions",
      "description": [
        "We can use special selectors in <code>Regular Expressions</code> to select a particular type of value.",
        "One such selector is the digit selector <code>\\d</code> which is used to retrieve the numbers in a string.",
        "It is used like this: <code>/\\d/g</code>.",
        "For numbers this is often written as <code>/\\d+/g</code>, where the <code>+</code> following the digit selector allows this regular expression to match one or more numbers.",
        "<h4>Instructions</h4>",
        "Use the <code>\\d</code> selector to select the number of numbers in the string, allowing for the possibility of one or more digit."
      ],
      "head": [
        ""
      ],
      "challengeSeed": [
        "// Setup",
        "var testString = \"There are 3 cats but 4 dogs.\";",
        "",
        "// Only change code below this line.",
        "",
        "var expression = /.+/g;  // Change this line",
        "",
        "// Only change code above this line",
        "",
        "// This code counts the matches of expression in testString",
        "var digitCount = testString.match(expression).length;"
      ],
      "tail": [
        "(function(){return digitCount;})();"
      ],
      "solutions": [
        "var testString = \"There are 3 cats but 4 dogs.\";\nvar expression = /\\d+/g;  // Change this line\nvar digitCount = testString.match(expression).length;"
      ],
      "tests": [
        "assert(digitCount === 2, 'message: Your regular expression should find two numbers in <code>testString</code>.');",
        "assert(code.match(/\\/\\\\d\\+\\//g), 'message: Use the <code>/\\d+/g</code> regular expression to find the numbers in <code>testString</code>.');"
      ],
      "type": "waypoint",
      "challengeType": 1
    },
    {
      "id": "cf1111c1c12feddfaeb8bdef",
      "title": "Find Whitespace with Regular Expressions",
      "description": [
        "We can also use regular expression selectors like <code>\\s</code> to find whitespace in a string.",
        "The whitespace characters are <code>\" \"</code> (space), <code>\\r</code> (the carriage return), <code>\\n</code> (newline), <code>\\t</code> (tab), and <code>\\f</code> (the form feed).",
        "The whitespace regular expression looks like this:",
        "<code>/\\s+/g</code>",
        "<h4>Instructions</h4>",
        "Use <code>\\s</code> to select all the whitespace characters in the sentence string."
      ],
      "head": [
        ""
      ],
      "challengeSeed": [
        "// Setup",
        "var testString = \"How many spaces are there in this sentence?\";",
        "",
        "// Only change code below this line.",
        "",
        "var expression = /.+/g;  // Change this line",
        "",
        "// Only change code above this line",
        "",
        "// This code counts the matches of expression in testString",
        "var spaceCount = testString.match(expression).length;"
      ],
      "tail": [
        "(function(){return spaceCount;})();"
      ],
      "solutions": [
        "var testString = \"How many spaces are there in this sentence?\";\nvar expression = /\\s+/g;  // Change this line\nvar spaceCount = testString.match(expression).length;"
      ],
      "tests": [
        "assert(spaceCount === 7, 'message: Your regular expression should find seven spaces in <code>testString</code>.');",
        "assert(code.match(/\\/\\\\s\\+\\//g), 'message: Use the <code>/\\s+/g</code> regular expression to find the spaces in <code>testString</code>.');"
      ],
      "type": "waypoint",
      "challengeType": 1
    },
    {
      "id": "cf1111c1c13feddfaeb3bdef",
      "title": "Invert Regular Expression Matches with JavaScript",
      "description": [
        "You can invert any match by using the uppercase version of the regular expression selector.",
        "For example, <code>\\s</code> will match any whitespace, and <code>\\S</code> will match anything that isn't whitespace.",
        "<h4>Instructions</h4>",
        "Use <code>/\\S/g</code> to count the number of non-whitespace characters in <code>testString</code>."
      ],
      "head": [
        ""
      ],
      "challengeSeed": [
        "// Setup",
        "var testString = \"How many non-space characters are there in this sentence?\";",
        "",
        "// Only change code below this line.",
        "",
        "var expression = /.+/g;  // Change this line",
        "",
        "// Only change code above this line",
        "",
        "// This code counts the matches of expression in testString",
        "var nonSpaceCount = testString.match(expression).length;"
      ],
      "tail": [
        "(function(){return nonSpaceCount;})();"
      ],
      "solutions": [
        "var testString = \"How many non-space characters are there in this sentence?\";\nvar expression = /\\S/g;  \nvar nonSpaceCount = testString.match(expression).length;"
      ],
      "tests": [
        "assert(nonSpaceCount === 49, 'message: Your regular expression should find forty nine non-space characters in the <code>testString</code>.');",
        "assert(code.match(/\\/\\\\S\\/g/g), 'message: Use the <code>/\\S/g</code> regular expression to find non-space characters in <code>testString</code>.');"
      ],
      "type": "waypoint",
      "challengeType": 1
    }
  ]
}
